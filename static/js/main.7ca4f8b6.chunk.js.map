{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Restart","calculateWinner","squares","lines","i","length","a","b","c","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","setState","slice","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","playAgain","renderRestart","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ca4f8b6.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"tachyons\";\n\nfunction Square(props) {\n  return (\n    <button className=\"square shadow-4\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nfunction Restart(props) {\n  return (\n    <button className=\"restart\" onClick={props.onClick}>\n      Play Again\n    </button>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{ squares: Array(9).fill(null) }],\n      xIsNext: true,\n      stepNumber: 0,\n    };\n  }\n  renderRestart() {\n    return (\n      <Restart\n        onClick={() => {\n          this.setState({\n            history: [{ squares: Array(9).fill(null) }],\n            xIsNext: true,\n            stepNumber: 0,\n          });\n        }}\n      />\n    );\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{ squares: squares }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"go to move #\" + move : \"go to game start\";\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"winner:\" + winner;\n    } else if (this.state.stepNumber === 9) {\n      status = \"Draw\";\n    } else {\n      status = \"Next player:\" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n    const playAgain =\n      (status === \"Draw\" || winner)\n        ? this.renderRestart()\n        : null;\n\n    return (\n      <div className=\"game f3 tc b code\">\n        <div className=\"game-board\">\n          <div className=\"tc ma3\">{status}</div>\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n          <div className=\"restart ma4 grow\">{playAgain}</div>\n        </div>\n        <div className=\"game-info ma3\">\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}